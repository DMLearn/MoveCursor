using System;
using System.Threading;


//TODO: Fenstergröße der Konsole voreinstellen
//TODO: Textfarbe der Konsole voreinstellen
//TODO: Konsole automatisch minimieren
//TODO: aktuelle Cursor Position ermitteln

class MoveCursor
{

    private static int BenutzerAbfrage( )
    {
        Console.Write( "Aller wieviel Minuten sollen ein Interuppt ausgelöst werden: " );

        int timer = 0;
        timer = Convert.ToInt16( Console.ReadLine() ) * 60;
        return timer;
    }

    public static void Main()
    {
        //Variablen
        #region
        int cursorTimerInSekunden = 0;
        int deltaInSekunden = 0;
        int count = 0;
        Random xRand = new Random( 0 );
        Random yRand = new Random( 0 );
        Int32 posX = 0;
        Int32 posY = 0;
        #endregion


        cursorTimerInSekunden = BenutzerAbfrage();

        do
        {
            while (!Console.KeyAvailable)
            {

                Console.Clear();
                Console.WriteLine( "Zum Beenden Escape drücken!" );
                Console.WriteLine( "---------------------------" );
                Console.WriteLine( "Es bleiben noch {0} Sekunden bis zum nächsten Interrupt.", (cursorTimerInSekunden - count) );
                Thread.Sleep( 100 );
                count = count + 1;

                if (count >= cursorTimerInSekunden)
                {
                    /// <summary>
                    /// Hinweis: Code für die WINAPI stammt von http://winapi.myownworld.eu/?tag=mouse_event
                    /// </summary>

                    posX = 20000 + xRand.Next( -500, 500 );
                    posY = 20000 + yRand.Next( -500, 500 );
                    WINAPI.mouse_event( (int)WINAPI.MouseFlags.MOUSEEVENTF_MOVE | (int)WINAPI.MouseFlags.MOUSEEVENTF_ABSOLUTE, posX, posY, 0, 0 );
                    count = 0;
                }
            }
        }
        while (Console.ReadKey( true ).Key != ConsoleKey.Escape);
    }


}

   